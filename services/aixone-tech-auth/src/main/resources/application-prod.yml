server:
  port: 8080
  servlet:
    context-path: /api/v1

spring:
  application:
    name: aixone-tech-auth
  
  profiles:
    active: prod
  
  # JPA PostgreSQL Configuration
  datasource:
    url: ${DATABASE_URL:jdbc:postgresql://postgres:5432/aixone_auth}
    username: ${DATABASE_USERNAME:ai_xone}
    password: ${DATABASE_PASSWORD:ai_xone}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 50
      minimum-idle: 10
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
      leak-detection-threshold: 60000
  
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: false
        jdbc:
          time_zone: UTC
        connection:
          provider_disables_autocommit: true
  
  # Flyway Configuration for Database Migration
  flyway:
    url: ${DATABASE_URL:jdbc:postgresql://postgres:5432/aixone_auth}
    user: ${DATABASE_USERNAME:ai_xone}
    password: ${DATABASE_PASSWORD:ai_xone}
    locations: classpath:db/migration
    baseline-on-migrate: true
    validate-on-migrate: true
  
  # Redis Configuration
  data:
    redis:
      host: ${REDIS_HOST:redis}
      port: ${REDIS_PORT:6379}
      database: ${REDIS_DATABASE:0}
      timeout: 10s
      lettuce:
        pool:
          max-active: 20
          max-idle: 10
          min-idle: 5

# JWT配置
jwt:
  secret: ${JWT_SECRET}
  expiration: ${JWT_EXPIRATION:3600000}  # 1小时
  refresh-expiration: ${JWT_REFRESH_EXPIRATION:604800000}  # 7天
  issuer: ${JWT_ISSUER:aixone-tech-auth}

# 多租户配置
multitenant:
  enabled: true
  default-tenant: ${DEFAULT_TENANT:default}
  tenant-header: ${TENANT_HEADER:X-Tenant-ID}

# 安全配置
security:
  cors:
    allowed-origins: ${CORS_ALLOWED_ORIGINS:*}
    allowed-methods: "GET,POST,PUT,DELETE,OPTIONS"
    allowed-headers: "*"
    allow-credentials: true
  
  rate-limit:
    enabled: true
    login-attempts: ${RATE_LIMIT_LOGIN_ATTEMPTS:5}
    window-duration: ${RATE_LIMIT_WINDOW_DURATION:300}  # 5分钟

# 日志配置
logging:
  level:
    com.aixone.tech.auth: ${LOG_LEVEL:INFO}
    org.springframework.security: WARN
    org.springframework.web: WARN
    org.hibernate.SQL: WARN
    org.hibernate.type.descriptor.sql.BasicBinder: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: ${LOG_FILE:/var/log/aixone-tech-auth/application.log}
    max-size: 100MB
    max-history: 30

# 管理端点
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: when-authorized
  metrics:
    export:
      prometheus:
        enabled: true
