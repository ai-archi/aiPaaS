server:
  port: 8080
  servlet:
    context-path: /api/v1

spring:
  application:
    name: axione-tech-auth
  
  profiles:
    active: dev
  
  # JPA PostgreSQL Configuration
  datasource:
    url: jdbc:postgresql://127.0.0.1:5432/aixone_auth
    username: ai_xone
    password: ai_xone
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
  
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        jdbc:
          time_zone: UTC
  
  # Flyway Configuration for Database Migration
  flyway:
    url: jdbc:postgresql://127.0.0.1:5432/aixone_auth
    user: ai_xone
    password: ai_xone
    locations: classpath:db/migration
    baseline-on-migrate: true
  
  # Redis Configuration
  data:
    redis:
      host: localhost
      port: 6379
      database: 0
      timeout: 10s

# JWT配置
jwt:
  secret: ${JWT_SECRET:aixone-tech-auth-secret-key-for-jwt-token-generation-and-validation}
  expiration: 3600000  # 1小时
  refresh-expiration: 604800000  # 7天
  issuer: aixone-tech-auth

# 多租户配置
multitenant:
  enabled: true
  default-tenant: default
  tenant-header: X-Tenant-ID

# 安全配置
security:
  cors:
    allowed-origins: "*"
    allowed-methods: "GET,POST,PUT,DELETE,OPTIONS"
    allowed-headers: "*"
    allow-credentials: true
  
  rate-limit:
    enabled: true
    login-attempts: 5
    window-duration: 300  # 5分钟

# 日志配置
logging:
  level:
    com.aixone.tech.auth: DEBUG
    org.springframework.security: DEBUG
    org.springframework.web: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# 管理端点
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always