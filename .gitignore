# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# UV
#   Similar to Pipfile.lock, it is generally recommended to include uv.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#uv.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/latest/usage/project/#working-with-version-control
.pdm.toml
.pdm-python
.pdm-build/

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#.idea/

# Ruff stuff:
.ruff_cache/

# PyPI configuration file
.pypirc

# MacOS system files
.DS_Store
.AppleDouble
.LSOverride
Icon
._*
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent

# NodeJS
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
.env.development.local
.env.test.local
.env.production.local
.env.local
.next
.nuxt
.vuepress/dist
.serverless/
.fusebox/
.dynamodb/
.tern-port
.lock-wscript
.yarn-integrity
.node_repl_history
.npm

# Electron specific
apps/desktop/release/app/dist
apps/desktop/release/build
apps/desktop/.erb/dll
apps/desktop/.erb/dll/renderer.dev.dll.js
apps/desktop/.erb/dll/renderer.prod.dll.js
apps/desktop/dll
apps/desktop/release
apps/desktop/main.js
apps/desktop/main.js.map
apps/desktop/package-lock.json
apps/desktop/yarn.lock
apps/desktop/pnpm-lock.yaml

# Route tree generated file
apps/desktop/src/renderer/routeTree.gen.ts

# Mobile app specific
apps/mobile/ios/App/build/
apps/mobile/ios/App/Pods/
apps/mobile/ios/App/App/public/
apps/mobile/android/app/build/
apps/mobile/android/app/release/
apps/mobile/android/.gradle/
apps/mobile/android/local.properties

# Java
*.class
*.log
*.ctxt
.mtj.tmp/
*.jar
*.war
*.nar
*.ear
*.zip
*.tar.gz
*.rar
hs_err_pid*
replay_pid*
.classpath
.project
.settings/
target/
.idea/
*.iml
*.iws
.gradle/
build/
out/
.mvn/wrapper/maven-wrapper.jar

# Additional Python ignores
*.pyc
__pycache__/
*.pyo
*.pyd
.Python
*.so
.python-version
.pytest_cache/
.coverage
htmlcov/
.tox/
*.egg
*.egg-info/
dist/
build/
eggs/
parts/
bin/
var/
sdist/
develop-eggs/
.installed.cfg
lib/
lib64/
venv/
.env/
.venv/
env/
ENV/
.idea/
.vscode/
*.sublime-project
*.sublime-workspace

# React
.DS_*
*.log
logs
**/*.backup.*
**/*.back.*
node_modules
bower_components
*.sublime*
psd
thumb
sketch
.env.local
.env.development.local
.env.test.local
.env.production.local
.eslintcache
.env
.env.*
build/
dist/
coverage/

# Vue
.DS_Store
node_modules
/dist
/coverage

# local env files
.env.local
.env.*.local

# Log files
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*

# Editor directories and files
.idea
.vscode
*.suo
*.ntvs*
*.njsproj
*.sln
*.sw?

# Vue build output
dist/
dist-ssr/
*.local


deploy/nacos/*
**/.mvn
**/.idea
**/.vscode
**/.DS_Store
**/.gitignore
**/.git
**/.gitignore

nohup.out

# Maven
target/
pom.xml.tag
pom.xml.releaseBackup
pom.xml.versionsBackup
pom.xml.next
release.properties
dependency-reduced-pom.xml
buildNumber.properties
.mvn/timing.properties
# 注意：不要忽略整个 .mvn 文件夹，因为它包含了 wrapper 的配置
!.mvn/wrapper/maven-wrapper.jar
!.mvn/wrapper/maven-wrapper.properties
!mvnw
!mvnw.cmd

# Go debug binaries
__debug_bin*